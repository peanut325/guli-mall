server:
  port: 9000
spring:
  application:
    name: gulimall-order
  thymeleaf:
    cache: false
  datasource: # 配置数据源
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/gulimall-oms?characterEncoding=utf-8&serverTimezone=GMT%2B8&useSSL=false
    username: root
    password: 123456
  rabbitmq:
    host: 192.168.241.130 # host地址
    port: 5672  # 端口
    virtual-host: / # 虚拟主机，默认
    publisher-confirms: true  # 开启发送端的确认，抵达broker的确认
    publisher-returns: true   # 开启发送端的确认，抵达queue的确认
    template:
      mandatory: true # 只要抵达队列，优先异步回调我们这个returnconfirm
    listener:
      simple:
        acknowledge-mode: manual  # 配置ack为手动应答
  cloud:
    nacos:
      discovery:
        server-addr: 127.0.0.1:8848
  session:
    store-type: redis
  redis:
    host: 192.168.241.130
    port: 6379
  mvc:
    date-format: yyyy-MM-dd HH:mm:ss
gulimall:
  thread:
    coreSize: 20
    maxSize: 200
    keepAliveTime: 10
mybatis-plus:
  mapper-locations: classpath*:/mapper/**/*.xml
  global-config:
    db-config:
      id-type: auto
feign:
  client:
    config:
      default:
        connect-timeout: 10000
        read-timeout: 10000
alipay:
  appId: # appId
  merchantPrivateKey: # 商户私钥
  alipayPublicKey:  # 支付宝公钥
  notifyUrl: http://f78krr.natappfree.cc/pay/notify     # 支付宝需要访问我们，所以内网穿透启动后填写
  returnUrl: http://member.gulimalls.com/memberOrder.html # return时浏览器访问，所以可以通过zuul访问
  signType: RSA2
  charset: utf-8                                        # 字符集编码
  gatewayUrl: https://openapi.alipaydev.com/gateway.do  # 支付宝网关

